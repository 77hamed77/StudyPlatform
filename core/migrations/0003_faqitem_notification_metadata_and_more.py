# Generated by Django 5.2.3 on 2025-07-12 02:11

import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_educationalresource'),
        ('files_manager', '0003_mainfile_academic_year_mainfile_semester_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FAQItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=255, verbose_name='السؤال')),
                ('answer', models.TextField(verbose_name='الإجابة')),
                ('order', models.PositiveIntegerField(default=0, help_text='رقم لترتيب الأسئلة الشائعة.', verbose_name='ترتيب العرض')),
                ('is_active', models.BooleanField(default=True, verbose_name='نشط (للعرض العام)')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
            ],
            options={
                'verbose_name': 'سؤال شائع',
                'verbose_name_plural': 'الأسئلة الشائعة',
                'ordering': ['order', 'question'],
            },
        ),
        migrations.AddField(
            model_name='notification',
            name='metadata',
            field=models.JSONField(blank=True, default=dict, help_text='بيانات إضافية للإشعار (مثل سبب التذكير، تاريخ آخر تفاعل).', null=True, verbose_name='بيانات وصفية للإشعار'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='dashboard_layout_preferences',
            field=models.JSONField(blank=True, default=dict, help_text='تفضيلات المستخدم لعرض وترتيب أقسام لوحة التحكم (JSON).', null=True, verbose_name='تفضيلات تخطيط لوحة التحكم'),
        ),
        migrations.AddField(
            model_name='userprofile',
            name='study_goals',
            field=models.TextField(blank=True, help_text='أهداف الطالب الأكاديمية لمساعد الذكاء الاصطناعي.', null=True, verbose_name='أهداف الدراسة'),
        ),
        migrations.CreateModel(
            name='DiscussionPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, verbose_name='العنوان')),
                ('content', models.TextField(verbose_name='المحتوى')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('is_anonymous', models.BooleanField(default=False, help_text='إذا تم تحديده، سيتم إخفاء اسم المستخدم.', verbose_name='نشر كمجهول')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_posts', to=settings.AUTH_USER_MODEL, verbose_name='الكاتب')),
            ],
            options={
                'verbose_name': 'منشور مناقشة',
                'verbose_name_plural': 'منشورات المناقشة',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='DiscussionComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.TextField(verbose_name='التعليق')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإنشاء')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('is_anonymous', models.BooleanField(default=False, help_text='إذا تم تحديده، سيتم إخفاء اسم المستخدم.', verbose_name='نشر كمجهول')),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='discussion_comments', to=settings.AUTH_USER_MODEL, verbose_name='الكاتب')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='core.discussionpost', verbose_name='المنشور')),
            ],
            options={
                'verbose_name': 'تعليق مناقشة',
                'verbose_name_plural': 'تعليقات المناقشة',
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='AcademicProgress',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('grade', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True, verbose_name='الدرجة')),
                ('notes', models.TextField(blank=True, null=True, verbose_name='ملاحظات')),
                ('date_recorded', models.DateField(default=django.utils.timezone.now, verbose_name='تاريخ التسجيل')),
                ('subject', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='files_manager.subject', verbose_name='المادة الدراسية')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='academic_progress', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'تقدم أكاديمي',
                'verbose_name_plural': 'التقدم الأكاديمي',
                'ordering': ['-date_recorded', 'subject__name'],
                'unique_together': {('user', 'subject', 'date_recorded')},
            },
        ),
        migrations.CreateModel(
            name='EducationalResourceRating',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='التقييم (من 1 إلى 5)')),
                ('review_text', models.TextField(blank=True, null=True, verbose_name='نص المراجعة')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ التقييم')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='تاريخ التحديث')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='ratings', to='core.educationalresource', verbose_name='المورد التعليمي')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='resource_ratings', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'تقييم مورد تعليمي',
                'verbose_name_plural': 'تقييمات الموارد التعليمية',
                'ordering': ['-created_at'],
                'unique_together': {('resource', 'user')},
            },
        ),
        migrations.CreateModel(
            name='UserFavoriteResource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added_at', models.DateTimeField(auto_now_add=True, verbose_name='تاريخ الإضافة للمفضلة')),
                ('resource', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorited_by', to='core.educationalresource', verbose_name='المورد التعليمي')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='favorite_resources', to=settings.AUTH_USER_MODEL, verbose_name='المستخدم')),
            ],
            options={
                'verbose_name': 'مورد تعليمي مفضل',
                'verbose_name_plural': 'الموارد التعليمية المفضلة',
                'ordering': ['-added_at'],
                'unique_together': {('user', 'resource')},
            },
        ),
    ]
